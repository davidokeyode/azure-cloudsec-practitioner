# Create Storage account with SAS token
$group = "platform-resource-enum-rg"
$location = "uksouth"

# Create resource group
az group create --name $group --location $location

$name = Read-Host "Please enter a basename"
$containers = "private", "public", "archived"

# Clone repo and download sensitive info
git clone https://github.com/microsoft/Windows-universal-samples.git
Invoke-WebRequest -Uri https://raw.githubusercontent.com/davidokeyode/azure-offensive/master/sensitive_customer_private_information.csv -OutFile sensitive_customer_private_information.csv

# Create storage account
az storage account create --name $name --resource-group $group --location $location --sku Standard_LRS --allow-blob-public-access true --https-only false

# Create storage containers
$containers | ForEach-Object {
    az storage container create --account-name $name --name $_ --public-access container
}

# Upload blobs
az storage blob upload-batch --account-name $name -d $containers[2] -s Windows-universal-samples/SharedContent
az storage blob upload-batch --account-name $name -d $containers[1] -s Windows-universal-samples/archived/CameraFaceDetection
az storage blob upload --account-name $name --container-name $containers[0] --name sensitive_customer_private_information.csv --file sensitive_customer_private_information.csv 

# Set variables and create resource group
$random = Get-Random -Maximum 100000 -Minimum 10000
$customappname = "customapp"
$containerappname = "containerapp"

# Obtain subscription id
$subid = az account show --query id --output tsv

# Create service principals with contributor permissions
$customapp = az ad sp create-for-rbac -n $customappname --role Reader --scopes /subscriptions/$subid | ConvertFrom-Json
$containerapp = az ad sp create-for-rbac -n $containerappname --role Reader --scopes /subscriptions/$subid | ConvertFrom-Json

# App Service
$gitrepo = "https://github.com/Azure-Samples/php-docs-hello-world"

# Create App Service plan and web app
az appservice plan create --name $name --resource-group $group --sku FREE
az webapp create --name $name --resource-group $group --plan $name
az webapp deployment source config --name $name --resource-group $group --repo-url $gitrepo --branch master --manual-integration

# Key Vault
az keyvault create --name $name --resource-group $group --location $location

# Container registry and import container images
az acr create --resource-group $group --name $name --sku Standard
az acr update --name $name --anonymous-pull-enabled

$imageVersions = "v1", "v2", "v3", "v4"
$imageVersions | ForEach-Object {
    az acr import -n $name --source docker.io/library/nginx:latest -t littlecloudnginx:$_
}

# Modify Docker file
Invoke-WebRequest -Uri https://raw.githubusercontent.com/davidokeyode/azure-offensive/master/platform-resource-enumeration/Dockerfile -OutFile Dockerfile

(Get-Content Dockerfile).Replace('"$containerappid"', "`"$($containerapp.appId)`"").Replace('"$containerappsecret"', "`"$($containerapp.password)`"").Replace('"$tenantid"', "`"$($containerapp.tenant)`"") | Set-Content Dockerfile

az acr build --resource-group $group --registry $name --image nodeapp-web:v1 .

# Function App
az functionapp create -g $group  -p $name -n $name -s $name

# Echo created resources
Write-Output "Created Storage Account: $name"
$containers | ForEach-Object { Write-Output "Created Blob Container: $_" }
Write-Output "Created Web App: http://$name.azurewebsites.net"
Write-Output "Created Key Vault: http://$name.vault.azure.net"
Write-Output "Created Container Registry: $name.azurecr.io"