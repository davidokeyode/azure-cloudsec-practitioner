## Update Windows Subsystem for Linux (WSL) to WSL2
wsl --update

## Install Chocolatey
$env:chocolateyVersion = '1.4.0'
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

## Install CLI tools and SDKs using chocolatey
choco install azure-cli az.powershell terraform nodejs.install docker-desktop go rust win-no-annoy -y
choco install vcredist-all -y
choco install python --version=3.7.2 -y
choco install microsoft-windows-terminal --pre
choco install miniconda3 --version=4.12.0 --params="'/AddToPath:1 /InstallationType:AllUsers /RegisterPython:1'" -y
choco install microsoft-windows-terminal -y

## Install Checkov
pip3 install checkov

## Upgrade pip
python -m pip install --upgrade pip

## Install needed libraries
pip install flask requests python-dotenv pylint matplotlib pillow requests-futures ordereddict pipenv dnspython astroid autopep8 azure-core azure-identity azure-mgmt-compute azure-mgmt-core azure-mgmt-storage PyInputPlus azure-mgmt-network azure-mgmt-resource azure-common
pip install --upgrade numpy

## Create folder structure for pentest tools
New-Item -ItemType Directory -Path "$HOME\PentestTools"
New-Item -ItemType Directory -Path "$HOME\PentestTools\Azure"
New-Item -ItemType Directory -Path "$HOME\PentestTools\Azure\Attack"
New-Item -ItemType Directory -Path "$HOME\PentestTools\Azure\Assessment"
New-Item -ItemType Directory -Path "$HOME\PentestTools\Azure\VulnerableEnv"

## Add the pentest tools folder to the Windows Defender exclusion list
Add-MpPreference -ExclusionPath "$HOME\PentestTools"

## Install the AzureAD PowerShell module
Install-Module AzureAD -Force

## Install the AzureAD PowerShell (Preview) module
Install-Module -Name AzureADPreview -Force

## Install the Microsoft Graph PowerShell module
Install-Module -Name Microsoft.Graph -Force

## Install AADInternals from PowerShell Gallery
Install-Module AADInternals -Force

## Install MicroBurst
git clone https://github.com/NetSPI/MicroBurst.git "$HOME\PentestTools\Azure\Attack\MicroBurst"
cd "$HOME\PentestTools\Azure\Attack\MicroBurst"
Import-Module .\MicroBurst.psm1
cd "$HOME"

## Install PowerZure
git clone https://github.com/hausec/PowerZure.git "$HOME\PentestTools\Azure\Attack\PowerZure"
cd "$HOME\PentestTools\Azure\Attack\PowerZure"
Import-Module .\PowerZure.psd1 -Force
cd "$HOME"

## Install AADAppAudit
git clone -b SASTokenVer https://github.com/jsa2/AADAppAudit
cd AADAppAudit

az storage account show-connection-string -g $group -n $storage -o json  > src/config.json
az storage account management-policy create --account-name $storage  -g $group --policy @retention.json

cat src/config.json

cat package.json

npm install

## Install BloodHound
$dockerComposeYml = Invoke-WebRequest -Uri "https://github.com/SpecterOps/BloodHound/raw/main/examples/docker-compose/docker-compose.yml" -UseBasicParsing
$dockerComposeYml.Content | docker compose -f - up

$dockerComposeYml = Invoke-WebRequest -Uri "https://github.com/SpecterOps/BloodHound/raw/main/examples/docker-compose/docker-compose.yml" -UseBasicParsing
$dockerComposeYml.Content | docker compose -f - up | Out-File -FilePath "output.log"


curl -L https://github.com/SpecterOps/BloodHound/raw/main/examples/docker-compose/docker-compose.yml | docker compose -f - up

docker compose down -v
docker compose up 

## Install AzureHound
Invoke-WebRequest -Uri "https://github.com/BloodHoundAD/AzureHound/releases/download/v2.0.4/azurehound-windows-amd64.zip" -OutFile "$HOME\Downloads\AzureHound.zip"

Expand-Archive -LiteralPath "$HOME\Downloads\AzureHound.zip" -DestinationPath "$HOME\PentestTools\Azure\Attack\AzureHound"

Remove-Item "$HOME\Downloads\AzureHound.zip"



## Install CNAPPGoat




## Install Azure-AccessPermissions
git clone https://github.com/csandker/Azure-AccessPermissions.git "$HOME\PentestTools\Azure\Attack\Azure-AccessPermissions"
cd "$HOME\PentestTools\Azure\Attack\Azure-AccessPermissions"
Import-Module .\Azure-AccessPermissions.ps1
cd "$HOME"


## Install ScubaGear
Invoke-WebRequest -Uri "https://github.com/cisagov/ScubaGear/releases/download/0.3.0/ScubaGear-0.3.0.zip" -OutFile "$HOME\Downloads\ScubaGear.zip"
Expand-Archive -Path "$HOME\PentestTools\Azure\VulnerableEnv\ScubaGear.zip" -DestinationPath "$HOME\PentestTools\Azure\VulnerableEnv" -Force
Get-ChildItem -Recurse "$HOME\PentestTools\Azure\VulnerableEnv\ScubaGear-0.3.0" | Unblock-File
Remove-Item -Path "$HOME\Downloads\ScubaGear.zip"


## 





